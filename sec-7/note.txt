1----
mongod  dii 
mongo db is no-sql db 
you simply store json object
brew --> package manager mac os

3----- install in windows
notice to version when write into path sys envirement 
uncheck install mongodb compass   after download separtly
becauuse  after install comppass look at the server but no thing see ant thing
>md c:\data\db    go to this adress   power sahll
system envirement  >  append  path this adrres path  with sync by version  at know time  4.0
 
then install compass
https://www.mongodb.com/try/download/compass
map site > /try    mange download  tools and atlas and mongodb

----
4---conecting mongo

npm i mongoose@5.0.1
mongoose.connect(localhost).then() return a promise
.catch ((err)=>{console.error("",err)} 

5--- schima
collaction in mongodb is like table in relational database
document in mongodb is kind of similar a row is relational db
relational db have table and row  mongo db have collaction and document
is document is container of key value pair
_id  --> is uniq identifier 
tag--> key value pair
date 
author
ispublished
__v  version
in mongoose we have a consept call schima  
this is specfic to monggose not part of mongodb
we use schima in mongoose to define shape of document
in mongodb collection 

class schima from mongoose
new mongoose.schima({})
schima type
string 
number
date
buffer
boolean
objectID
array

6--- model
mongoose.model(,) take two arg
first arg is singular name of collection model 
second arg  shape of document 
then const Class= mongoose.model("name collection","pattern schima")
then data=new Class({name:"emilia",...) with look schima fill data


7---  save   data
await data.save()  is async opreation
best practise this instanse from class filled data and save pack into a async funtion

8--- querying selctor   q.prototype
Data.find({name:"emilia"}).limit(3).sort({name:1}).select({name:1 , tag:1})  
slelect like projection 

9----comparison opreators
//eq  equal
//ne  not eaual
//gt  and gte   greater than and equal
//lt  and lte   less than  and less than or equal
//in
//nin  not in
find({price:{$gt:10}})
find({price:{$in:[10,12,15,30]}})  price to be these number
10----logical operator
//or
//and
.find().or([{name:"emilia"},{name:"scarlett"}]) result name to be ether names

11----regular expression 
this syntax is represent of rgex   /pattern /
.find({name:/^emilia /})  name starte first with emilia
.find({name:/emilia$/})  name end up   with emilia
.find({name:/.*emilia.*/})  name have emilia part of word
/.+?(?=ion)/  before  ion  end up
/(?<=\_).* /after undescore mark select
/(?<=\_).*.+?(?=.jpg)/
12-----counting
find().count()

13----- pagination 
in real world  have
api/movie?page_number=3&page_size=10
page_number=3
page_size=10
find().skip((page_number-1)*page_size).limit(page_size)

14-----exercise
mongoimport --db  name   --collection name  --file  address file  --jsonArray 
last flag  for  in   my  json file is as [{},{},{}]